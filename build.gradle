plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'umc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

sourceSets {
	main {
		java {
			srcDirs += "$buildDir/generated/sources/annotationProcessor/java/main"
		}
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// springboot web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// h2
	runtimeOnly 'com.h2database:h2'

	// mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// springboot test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}

// --- QueryDSL 설정 추가 ---
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file("$buildDir/generated/sources/annotationProcessor/java/main"))
}

// clean 작업 시 생성된 Q-Type 파일들도 삭제되도록 설정
clean {
	delete file("$buildDir/generated")
}